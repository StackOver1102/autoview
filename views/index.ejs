<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Auto Crawl</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      body {
        font-family: "Inter", sans-serif;
      }
    </style>
  </head>
  <body
    class="bg-gradient-to-br from-blue-100 to-blue-300 text-gray-900 min-h-screen flex flex-col"
  >
    <header class="bg-purple-600 text-white py-4 shadow-lg">
      <div class="container mx-auto flex justify-between items-center px-4">
        <h1 class="text-3xl font-bold">Auto Crawl</h1>
        <nav>
          <ul class="flex space-x-6">
            <li><a href="/" class="hover:text-gray-200">Trang chủ</a></li>
            <li>
              <a href="/order" class="hover:text-gray-200">Lịch sử mua</a>
            </li>
            <li><a href="/task" class="hover:text-gray-200">List Task</a></li>
            <li><a href="/user" class="hover:text-gray-200">User</a></li>
          </ul>
        </nav>
      </div>
    </header>

    <!-- Main Content -->
    <main class="flex-grow container mx-auto py-10 px-4">
      <h2 class="text-2xl font-bold mb-6 text-center">Submit Your Service</h2>

      <!-- Display success or error message -->
      <% if (query.message) { %>
      <div
        class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4"
        role="alert"
      >
        <span class="block sm:inline"><%= query.message %></span>
      </div>
      <% } %> <% if (query.error) { %>
      <div
        class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4"
        role="alert"
      >
        <span class="block sm:inline"><%= query.error %></span>
      </div>
      <% } %>

      <form
        action="/submit"
        method="POST"
        class="bg-white p-6 rounded shadow-md max-w-md mx-auto"
      >
        <!-- Service Name Select -->
        <div class="mb-4">
          <label for="name" class="block text-gray-700">Service Name:</label>
          <select
            id="name"
            name="name"
            class="w-full p-2 border border-gray-300 rounded"
            onchange="updatePackages()"
          >
            <option value="">Select a service</option>
          </select>
        </div>

        <!-- Package Select -->
        <div class="mb-4">
          <label for="package" class="block text-gray-700">Package:</label>
          <select
            id="package"
            name="package"
            class="w-full p-2 border border-gray-300 rounded"
          >
            <option value="">Select a package</option>
          </select>
        </div>
        <!-- Start Date and Time -->
        <div class="mb-4">
          <label for="start-time" class="block text-gray-700"
            >Start Date and Time:</label
          >
          <input
            type="datetime-local"
            id="start-time"
            name="start_time"
            class="w-full p-2 border border-gray-300 rounded"
          />
        </div>

        <!-- End Date and Time -->
        <div class="mb-4">
          <label for="end-time" class="block text-gray-700"
            >End Date and Time:</label
          >
          <input
            type="datetime-local"
            id="end-time"
            name="end_time"
            class="w-full p-2 border border-gray-300 rounded"
          />
        </div>
        <div class="mb-4">
          <label for="time-range" class="block text-gray-700"
            >Select Time Range:</label
          >
          <select
            id="time-range"
            name="time_range"
            class="w-full p-2 border border-gray-300 rounded"
          >
            <option value="">Select a time range</option>
            <option value="15">15 minutes</option>
            <option value="30">30 minutes</option>
            <option value="60">1 hour</option>
            <option value="90">1.5 hours</option>
            <option value="120">2 hours</option>
            <option value="180">3 hours</option>
            <option value="240">4 hours</option>
            <option value="360">6 hours</option>
            <option value="1440">24 hours</option>
          </select>
        </div>
        <!-- Link Input -->
        <div class="mb-4">
          <label for="link" class="block text-gray-700"
            >Links (one per line):</label
          >
          <textarea
            id="link"
            name="link"
            class="w-full p-2 border border-gray-300 rounded"
            placeholder="Enter one link per line"
            rows="5"
          ></textarea>
        </div>

        <!-- Quantity Input -->
        <div class="mb-4">
          <label for="quantity" class="block text-gray-700"
            >Min quantity:</label
          >
          <input
            type="number"
            id="min_quantity"
            name="min_quantity"
            class="w-full p-2 border border-gray-300 rounded"
            placeholder="Enter quantity"
          />
        </div>

        <div class="mb-4">
          <label for="quantity" class="block text-gray-700"
            >Max quantity:</label
          >
          <input
            type="number"
            id="max_quantity"
            name="max_quantity"
            class="w-full p-2 border border-gray-300 rounded"
            placeholder="Enter quantity"
          />
        </div>

        <!-- Service Name Select -->
        <div class="mb-4">
          <label for="user" class="block text-gray-700">User:</label>
          <select
            id="user"
            name="user"
            class="w-full p-2 border border-gray-300 rounded"
            onchange="renderUser()"
          >
            <option value="">Select a user</option>
          </select>
        </div>
        <button
          type="submit"
          class="bg-blue-500 text-white py-2 px-4 rounded w-full"
        >
          Submit
        </button>
      </form>
    </main>

    <!-- Footer -->
    <footer class="bg-purple-600 text-white text-center py-4">
      <p>&copy; 2024 All rights reserved.</p>
    </footer>

    <!-- Add the script to fetch services and update packages dynamically -->
    <script>
      // Function to fetch services from the backend API
      async function fetchServices() {
        try {
          const response = await fetch("/api/services");
          if (!response.ok) {
            throw new Error("Error fetching services");
          }
          const services = await response.json();
          populateServices(services);
        } catch (error) {
          console.error("Failed to fetch services:", error);
        }
      }
      async function fetchUsers() {
        try {
          const response = await fetch("/api/user");
          if (!response.ok) {
            throw new Error("Failed to fetch users");
          }
          const users = await response.json();
          populateUserDropdown(users);
        } catch (error) {
          console.error("Error fetching user data:", error);
        }
      }

      // Function to populate the user dropdown
      function populateUserDropdown(users) {
        const userSelect = document.getElementById("user");

        // Clear existing options (except the first one)
        userSelect.innerHTML = '<option value="">Select a user</option>';

        // Populate the dropdown with users
        users.forEach((user) => {
          const option = document.createElement("option");
          option.value = user._id;
          option.textContent = user.name;
          userSelect.appendChild(option);
        });
      }
      // Populate the services in the service name dropdown
      function populateServices(services) {
        const serviceSelect = document.getElementById("name");
        services.forEach((service) => {
          const option = document.createElement("option");
          option.value = service.name;
          option.textContent = service.name;
          serviceSelect.appendChild(option);
        });
      }

      // Update the packages based on the selected service
      function updatePackages() {
        const selectedServiceName = document.getElementById("name").value;
        const packageSelect = document.getElementById("package");

        // Clear the package options
        packageSelect.innerHTML = '<option value="">Select a package</option>';

        // Fetch the services again (you could cache this instead of refetching)
        fetch("/api/services")
          .then((response) => response.json())
          .then((services) => {
            const selectedService = services.find(
              (service) => service.name === selectedServiceName
            );
            if (selectedService) {
              selectedService.package.forEach((pkg) => {
                const option = document.createElement("option");
                option.value = pkg.package_name;
                option.textContent = `${pkg.name} (Price: ${pkg.price})`;
                packageSelect.appendChild(option);
              });
            }
          })
          .catch((error) => {
            console.error("Failed to fetch services:", error);
          });
      }

      // Fetch services when the page loads
      document.addEventListener("DOMContentLoaded", fetchServices);
      document.addEventListener("DOMContentLoaded", fetchUsers);

    </script>
  </body>
</html>
